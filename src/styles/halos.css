/* ============================================
   HALOS (hero + sections)
   ============================================ */

/* ============================================
   SECTIONS — visuel de base (sans anim)
   (si tu avais déjà ces fonds dans theme.css,
    tu peux laisser ce bloc ici pour centraliser)
   ============================================ */

.section--halo {
  position: relative;
  isolation: isolate; /* halos derrière le contenu */

  /* Couleurs des halos */
  --halo-a: color-mix(in srgb, var(--green) 70%, #7dd3fc 30%);
  --halo-b: color-mix(in srgb, var(--orange) 75%, #e879f9 25%);

  /* Tailles / flou */
  --halo-size-1: min(52vw, 780px);
  --halo-size-2: min(40vw, 560px);
  --halo-blur: 26px;

  /* Position/rotation par défaut (alternées plus bas) */
  --halo-1-x: -12%;
  --halo-1-y: -10%;
  --halo-2-x: 78%;
  --halo-2-y: 88%;
  --halo-rot-1: -10deg;
  --halo-rot-2: 12deg;
}

.section--halo::before,
.section--halo::after {
  content: "";
  position: absolute;
  pointer-events: none;
  z-index: -1; /* derrière la section */
  filter: saturate(110%) contrast(102%) blur(var(--halo-blur));
}

/* Halo #1 (gros, doux) */
.section--halo::before {
  width: var(--halo-size-1);
  height: var(--halo-size-1);
  left: var(--halo-1-x);
  top: var(--halo-1-y);
  transform: rotate(var(--halo-rot-1));
  background: radial-gradient(
    60% 60% at 40% 40%,
    color-mix(in srgb, var(--halo-a) 26%, transparent) 0%,
    transparent 70%
  );
}

/* Halo #2 (plus petit) */
.section--halo::after {
  width: var(--halo-size-2);
  height: var(--halo-size-2);
  left: var(--halo-2-x);
  top: var(--halo-2-y);
  transform: rotate(var(--halo-rot-2));
  background: radial-gradient(
    60% 60% at 60% 60%,
    color-mix(in srgb, var(--halo-b) 22%, transparent) 0%,
    transparent 72%
  );
}

/* Alternance automatique pour casser la répétition */
.section--halo:nth-of-type(2n) {
  --halo-1-x: 84%;
  --halo-1-y: -12%;
  --halo-2-x: -14%;
  --halo-2-y: 84%;
  --halo-rot-1: 8deg;
  --halo-rot-2: -10deg;
}
.section--halo:nth-of-type(5n) {
  --halo-1-x: 10%;
  --halo-1-y: 85%;
  --halo-2-x: 70%;
  --halo-2-y: 78%;
  --halo-rot-1: 0deg;
  --halo-rot-2: 0deg;
}

/* Dark : teintes plus froides, blur un peu réduit */
:root[data-theme="dark"] .section--halo {
  --halo-a: color-mix(in srgb, var(--green) 55%, #60a5fa 45%);
  --halo-b: color-mix(in srgb, var(--orange) 55%, #f472b6 45%);
  --halo-blur: 22px;
}

/* Mobiles : halos plus compacts */
@media (max-width: 720px) {
  .section--halo {
    --halo-size-1: min(70vw, 520px);
    --halo-size-2: min(58vw, 420px);
  }
}

/* ============================================
   HERO — animation d’intensité + voile
   (ne redéfinit PAS le background du hero)
   ============================================ */

.hero {
  /* “léger → intense” (jamais noir) */
  --halo-int-min: 1; /* 1 = 100% */
  --halo-int-max: 1.5; /* ↑ = plus lumineux */
  --halo-sat-min: 1.1;
  --halo-sat-max: 1.5; /* ↑ = plus de couleur */
  --halo-fade-mid: 0.9; /* opacité au milieu */
  --halo-dur: 16s; /* durée d’un cycle */
}

/* Pulsation (filtre + opacité) */
.hero .hero__bg::before {
  animation: heroHaloGlow var(--halo-dur) ease-in-out infinite;
  will-change: filter, opacity;
}

/* Voile de lumière (optionnel) */
.hero .hero__bg::after {
  content: "";
  position: absolute;
  inset: 0;
  left: 50%;
  transform: translateX(-50%);
  width: inherit;
  pointer-events: none;
  z-index: 0;
  mix-blend-mode: screen;
  background: radial-gradient(
      55% 40% at 50% 22%,
      rgba(255, 255, 255, 0.22),
      transparent 60%
    ),
    radial-gradient(
      80% 60% at 20% 0%,
      rgba(255, 255, 255, 0.1),
      transparent 70%
    ),
    radial-gradient(
      80% 60% at 80% 0%,
      rgba(255, 255, 255, 0.1),
      transparent 70%
    );
  opacity: 0;
  animation: heroHaloVeil var(--halo-dur) ease-in-out infinite;
}

@keyframes heroHaloGlow {
  0% {
    filter: saturate(var(--halo-sat-min)) brightness(var(--halo-int-min));
    opacity: 0.98;
  }
  50% {
    filter: saturate(var(--halo-sat-max)) brightness(var(--halo-int-max));
    opacity: var(--halo-fade-mid);
  }
  100% {
    filter: saturate(calc((var(--halo-sat-min) + var(--halo-sat-max)) / 2))
      brightness(var(--halo-int-min));
    opacity: 0.98;
  }
}

@keyframes heroHaloVeil {
  0%,
  100% {
    opacity: 0;
  }
  50% {
    opacity: 0.18;
  }
}

@media (prefers-reduced-motion: reduce) {
  .hero .hero__bg::before,
  .hero .hero__bg::after {
    animation: none !important;
    filter: none !important;
    opacity: 1 !important;
  }
}

/* ============================================
   SECTIONS — animations (breathe + variantes)
   ============================================ */

.section--halo {
  /* Respiration par défaut (même peps que le hero) */
  --sec-halo-sat-min: 1.1;
  --sec-halo-sat-max: 1.5;
  --sec-halo-bright-min: 1;
  --sec-halo-bright-max: 1.5;
  --sec-halo-fade-mid: 0.9;
  --sec-halo-dur: 16s;
  --sec-halo-drift: 2.2vh;
  --sec-halo-phase: 0s;
}

/* Breathe + drift subtil sur les deux halos */
.section--halo::before,
.section--halo::after {
  animation: sectionHaloBreathe var(--sec-halo-dur) ease-in-out infinite;
  animation-delay: var(--sec-halo-phase);
  will-change: filter, opacity, transform;
}

/* Drift en opposition de phase */
.section--halo::before {
  --_drift1: calc(var(--sec-halo-drift) * 1);
  transform: translateY(0) rotate(var(--halo-rot-1));
  animation-name: sectionHaloBreathe, sectionHaloDrift1;
  animation-duration: var(--sec-halo-dur), calc(var(--sec-halo-dur) * 1.1);
  animation-iteration-count: infinite, infinite;
  animation-timing-function: ease-in-out, ease-in-out;
  animation-delay: var(--sec-halo-phase), var(--sec-halo-phase);
}
.section--halo::after {
  --_drift2: calc(var(--sec-halo-drift) * -1);
  transform: translateY(0) rotate(var(--halo-rot-2));
  animation-name: sectionHaloBreathe, sectionHaloDrift2;
  animation-duration: var(--sec-halo-dur), calc(var(--sec-halo-dur) * 1.2);
  animation-iteration-count: infinite, infinite;
  animation-timing-function: ease-in-out, ease-in-out;
  animation-delay: var(--sec-halo-phase), calc(var(--sec-halo-phase) + 0.6s);
}

/* Keyframes — respiration & drift */
@keyframes sectionHaloBreathe {
  0% {
    filter: saturate(var(--sec-halo-sat-min))
      brightness(var(--sec-halo-bright-min));
    opacity: 0.98;
  }
  50% {
    filter: saturate(var(--sec-halo-sat-max))
      brightness(var(--sec-halo-bright-max));
    opacity: var(--sec-halo-fade-mid);
  }
  100% {
    filter: saturate(
        calc((var(--sec-halo-sat-min) + var(--sec-halo-sat-max)) / 2)
      )
      brightness(var(--sec-halo-bright-min));
    opacity: 0.98;
  }
}
@keyframes sectionHaloDrift1 {
  0% {
    transform: translateY(0) rotate(var(--halo-rot-1));
  }
  50% {
    transform: translateY(var(--_drift1)) rotate(var(--halo-rot-1));
  }
  100% {
    transform: translateY(0) rotate(var(--halo-rot-1));
  }
}
@keyframes sectionHaloDrift2 {
  0% {
    transform: translateY(0) rotate(var(--halo-rot-2));
  }
  50% {
    transform: translateY(var(--_drift2)) rotate(var(--halo-rot-2));
  }
  100% {
    transform: translateY(0) rotate(var(--halo-rot-2));
  }
}

/* ---------- Variante “léger → intense” (jamais sombre) ---------- */
.section--halo.halo-pulse-gentle {
  /* Plage douce : toujours une lueur */
  --pulse-bright-min: 1.06;
  --pulse-bright-max: 1.42;
  --pulse-sat-min: 1.04;
  --pulse-sat-max: 1.38;
  --pulse-op-min: 0.82;
  --pulse-op-max: 0.98;
  --pulse-dur: 16s;

  /* Delays par défaut (peuvent être écrasés) */
  --pulse-delay: 0s;
  --drift-delay: 0.6s;

  /* Drift un poil plus ample sur cette variante */
  --sec-halo-drift: 1.6vh;
}

/* Active pulsation + drift subtil
   (on lit les delays via variables pour la désynchro) */
.section--halo.halo-pulse-gentle::before,
.section--halo.halo-pulse-gentle::after {
  animation-name: sectionHaloPulse, sectionHaloDrift1;
  animation-duration: var(--pulse-dur), calc(var(--sec-halo-dur) * 1.1);
  animation-iteration-count: infinite, infinite;
  animation-timing-function: ease-in-out, ease-in-out;
  animation-delay: var(--pulse-delay, 0s), var(--drift-delay, 0.6s);
}

/* Keyframes — pulse (filtre + opacité) */
@keyframes sectionHaloPulse {
  0% {
    filter: saturate(var(--pulse-sat-min, 1.06))
      brightness(var(--pulse-bright-min, 1));
    opacity: var(--pulse-op-min, 0.9);
  }
  50% {
    filter: saturate(var(--pulse-sat-max, 1.5))
      brightness(var(--pulse-bright-max, 1.5));
    opacity: var(--pulse-op-max, 0.98);
  }
  100% {
    filter: saturate(
        calc((var(--pulse-sat-min, 1.06) + var(--pulse-sat-max, 1.5)) / 2)
      )
      brightness(var(--pulse-bright-min, 1));
    opacity: var(--pulse-op-min, 0.9);
  }
}

/* Dark : plafonds plus bas pour ne pas éblouir */
:root[data-theme="dark"] .section--halo.halo-pulse-gentle {
  --pulse-bright-min: 1.02;
  --pulse-bright-max: 1.26;
  --pulse-sat-max: 1.22;
  --pulse-op-min: 0.68;
}

/* ---------- Désynchronisation facile (auto) ----------
   Ajoute class="halo-desync" sur un parent (ex: <main class="halo-desync">)
   Les variables ci-dessous sont lues par animation-delay et duration.
------------------------------------------------------- */
.halo-desync .section--halo.halo-pulse-gentle:nth-of-type(1n) {
  --pulse-dur: 15s;
  --pulse-delay: 0.2s;
  --drift-delay: 0.2s;
}
.halo-desync .section--halo.halo-pulse-gentle:nth-of-type(2n) {
  --pulse-dur: 17s;
  --pulse-delay: 0.8s;
  --drift-delay: 0.4s;
}
.halo-desync .section--halo.halo-pulse-gentle:nth-of-type(3n) {
  --pulse-dur: 14s;
  --pulse-delay: 0s;
  --drift-delay: 0.1s;
}
.halo-desync .section--halo.halo-pulse-gentle:nth-of-type(4n) {
  --pulse-dur: 18s;
  --pulse-delay: 1.2s;
  --drift-delay: 0.6s;
}
.halo-desync .section--halo.halo-pulse-gentle:nth-of-type(5n) {
  --pulse-dur: 16s;
  --pulse-delay: 0.4s;
  --drift-delay: 0.3s;
}

/* ============================================
   Accessibilité
   ============================================ */
@media (prefers-reduced-motion: reduce) {
  .section--halo::before,
  .section--halo::after,
  .section--halo.halo-pulse-gentle::before,
  .section--halo.halo-pulse-gentle::after {
    animation: none !important;
    filter: none !important;
    opacity: 1 !important;
  }
}
/* Assure la visibilité des halos derrière le contenu de la section */
.section--halo {
  position: relative;
  isolation: isolate; /* tu l'as déjà */
  z-index: 0; /* <-- ajoute ceci */
}

/* Si un wrapper interne met overflow:hidden, ne coupe pas les halos */
.section--halo > .container,
.section--halo > .container.container--xl,
.section--halo > .container.container--narrow {
  overflow: visible;
}

/* Option : un peu plus de variété d’emplacements par section */
main#home.halo-desync > section.section--halo:nth-of-type(1) {
  --halo-1-x: -18%;
  --halo-1-y: -12%;
  --halo-2-x: 72%;
  --halo-2-y: 82%;
  --sec-halo-phase: 0.1s;
}
main#home.halo-desync > section.section--halo:nth-of-type(2) {
  --halo-1-x: 80%;
  --halo-1-y: -14%;
  --halo-2-x: -10%;
  --halo-2-y: 86%;
  --sec-halo-phase: 0.6s;
}
main#home.halo-desync > section.section--halo:nth-of-type(3) {
  --halo-1-x: -6%;
  --halo-1-y: 78%;
  --halo-2-x: 68%;
  --halo-2-y: 70%;
  --sec-halo-phase: 0.25s;
}
main#home.halo-desync > section.section--halo:nth-of-type(4) {
  --halo-1-x: 82%;
  --halo-1-y: -8%;
  --halo-2-x: -16%;
  --halo-2-y: 76%;
  --sec-halo-phase: 0.9s;
}
/* Exemple : section Témoignages un peu plus violette/cyan */
#temoin-title:where(*) {
  /* hook via le header si tu veux */
}
main#home > section.section--halo:nth-of-type(5) {
  --halo-a: color-mix(in srgb, #8b5cf6 26%, transparent);
  --halo-b: color-mix(in srgb, #22d3ee 20%, transparent);
}
.section--halo {
  z-index: 0;
} /* le contenu ≠ positif */
